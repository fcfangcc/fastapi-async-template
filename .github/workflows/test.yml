# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Test

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize]

jobs:
  pytest:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: pytest
        ports:
          - 3306:3306
        # needed because the mysql container does not provide a healthcheck
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Verify unittest DB exists
      run: mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -e "SHOW DATABASES LIKE 'pytest'"

    - name: Install poetry
      run: python -m pip install poetry

    - name: Install dependencies
      run: poetry install -E mysql

    - name: Test with pytest
      run: |
        bash ./scripts/test.sh --cleardb --cov-report=xml
      env:
        SQLALCHEMY_DATABASE_URI: mysql+aiomysql://root@127.0.0.1:${{ job.services.mysql.ports[3306] }}/pytest?charset=utf8mb4
        FIRST_SUPERUSER: test${{ github.run_id }}@live.com
        FIRST_SUPERUSER_PASSWORD: test${{ github.run_id }}
        SECRET_KEY: testsecret
